# Generated from /home/dantipov/PycharmProjects/Compilers/Language.g4 by ANTLR 4.5.1
from antlr4 import *
from io import StringIO


def serializedATN():
    with StringIO() as buf:
        buf.write("\3\u0430\ud6d1\u8206\uad2d\u4417\uaef1\u8d80\uaadd\2/")
        buf.write("\u015d\b\1\4\2\t\2\4\3\t\3\4\4\t\4\4\5\t\5\4\6\t\6\4\7")
        buf.write("\t\7\4\b\t\b\4\t\t\t\4\n\t\n\4\13\t\13\4\f\t\f\4\r\t\r")
        buf.write("\4\16\t\16\4\17\t\17\4\20\t\20\4\21\t\21\4\22\t\22\4\23")
        buf.write("\t\23\4\24\t\24\4\25\t\25\4\26\t\26\4\27\t\27\4\30\t\30")
        buf.write("\4\31\t\31\4\32\t\32\4\33\t\33\4\34\t\34\4\35\t\35\4\36")
        buf.write("\t\36\4\37\t\37\4 \t \4!\t!\4\"\t\"\4#\t#\4$\t$\4%\t%")
        buf.write("\4&\t&\4\'\t\'\4(\t(\4)\t)\4*\t*\4+\t+\4,\t,\4-\t-\4.")
        buf.write("\t.\3\2\3\2\3\3\3\3\3\4\3\4\3\5\3\5\3\6\3\6\3\7\3\7\3")
        buf.write("\b\3\b\3\t\3\t\3\n\3\n\3\n\3\13\3\13\3\f\3\f\3\f\3\r\3")
        buf.write("\r\3\16\3\16\3\17\3\17\3\20\3\20\3\21\3\21\3\22\3\22\3")
        buf.write("\23\3\23\3\24\3\24\3\24\3\25\3\25\3\25\3\25\3\25\3\26")
        buf.write("\3\26\3\26\3\26\3\26\3\26\3\27\3\27\3\27\3\27\3\27\3\30")
        buf.write("\3\30\3\30\3\30\3\30\3\30\3\31\3\31\3\31\3\31\3\31\3\31")
        buf.write("\3\31\3\31\3\32\3\32\3\32\3\32\3\32\3\32\3\32\3\33\3\33")
        buf.write("\3\33\3\33\3\33\3\34\3\34\3\34\3\34\3\35\3\35\3\35\3\35")
        buf.write("\3\35\3\36\3\36\3\36\3\36\3\37\3\37\3\37\3\37\3\37\3 ")
        buf.write("\3 \3 \3 \3 \3 \3!\3!\3!\3!\3!\3!\3!\3\"\3\"\3\"\3\"\3")
        buf.write("\"\3\"\3#\3#\3#\3#\3#\3#\3#\3$\3$\5$\u00df\n$\3$\3$\7")
        buf.write("$\u00e3\n$\f$\16$\u00e6\13$\5$\u00e8\n$\3%\3%\7%\u00ec")
        buf.write("\n%\f%\16%\u00ef\13%\3%\3%\3&\3&\3&\3&\3&\3&\3&\3&\3&")
        buf.write("\5&\u00fc\n&\3\'\3\'\3\'\3\'\5\'\u0102\n\'\3\'\3\'\7\'")
        buf.write("\u0106\n\'\f\'\16\'\u0109\13\'\5\'\u010b\n\'\3(\5(\u010e")
        buf.write("\n(\3(\3(\3(\7(\u0113\n(\f(\16(\u0116\13(\5(\u0118\n(")
        buf.write("\3(\3(\6(\u011c\n(\r(\16(\u011d\3)\3)\5)\u0122\n)\3)\3")
        buf.write(")\3)\7)\u0127\n)\f)\16)\u012a\13)\5)\u012c\n)\3)\3)\6")
        buf.write(")\u0130\n)\r)\16)\u0131\3*\3*\3*\3*\3*\3*\3*\3*\3*\5*")
        buf.write("\u013d\n*\3+\3+\7+\u0141\n+\f+\16+\u0144\13+\3,\3,\7,")
        buf.write("\u0148\n,\f,\16,\u014b\13,\3-\3-\7-\u014f\n-\f-\16-\u0152")
        buf.write("\13-\3-\5-\u0155\n-\3.\6.\u0158\n.\r.\16.\u0159\3.\3.")
        buf.write("\2\2/\3\3\5\4\7\5\t\6\13\7\r\b\17\t\21\n\23\13\25\f\27")
        buf.write("\r\31\16\33\17\35\20\37\21!\22#\23%\24\'\25)\26+\27-\30")
        buf.write("/\31\61\32\63\33\65\34\67\359\36;\37= ?!A\"C#E$G%I&K\'")
        buf.write("M(O)Q*S+U,W-Y.[/\3\2\r\3\2//\3\2\63;\3\2\62;\3\2$$\4\2")
        buf.write(">>@@\3\2c|\6\2\62;C\\aac|\3\2C\\\3\2\f\f\3\3\f\f\5\2\13")
        buf.write("\f\17\17\"\"\u0174\2\3\3\2\2\2\2\5\3\2\2\2\2\7\3\2\2\2")
        buf.write("\2\t\3\2\2\2\2\13\3\2\2\2\2\r\3\2\2\2\2\17\3\2\2\2\2\21")
        buf.write("\3\2\2\2\2\23\3\2\2\2\2\25\3\2\2\2\2\27\3\2\2\2\2\31\3")
        buf.write("\2\2\2\2\33\3\2\2\2\2\35\3\2\2\2\2\37\3\2\2\2\2!\3\2\2")
        buf.write("\2\2#\3\2\2\2\2%\3\2\2\2\2\'\3\2\2\2\2)\3\2\2\2\2+\3\2")
        buf.write("\2\2\2-\3\2\2\2\2/\3\2\2\2\2\61\3\2\2\2\2\63\3\2\2\2\2")
        buf.write("\65\3\2\2\2\2\67\3\2\2\2\29\3\2\2\2\2;\3\2\2\2\2=\3\2")
        buf.write("\2\2\2?\3\2\2\2\2A\3\2\2\2\2C\3\2\2\2\2E\3\2\2\2\2G\3")
        buf.write("\2\2\2\2I\3\2\2\2\2K\3\2\2\2\2M\3\2\2\2\2O\3\2\2\2\2Q")
        buf.write("\3\2\2\2\2S\3\2\2\2\2U\3\2\2\2\2W\3\2\2\2\2Y\3\2\2\2\2")
        buf.write("[\3\2\2\2\3]\3\2\2\2\5_\3\2\2\2\7a\3\2\2\2\tc\3\2\2\2")
        buf.write("\13e\3\2\2\2\rg\3\2\2\2\17i\3\2\2\2\21k\3\2\2\2\23m\3")
        buf.write("\2\2\2\25p\3\2\2\2\27r\3\2\2\2\31u\3\2\2\2\33w\3\2\2\2")
        buf.write("\35y\3\2\2\2\37{\3\2\2\2!}\3\2\2\2#\177\3\2\2\2%\u0081")
        buf.write("\3\2\2\2\'\u0083\3\2\2\2)\u0086\3\2\2\2+\u008b\3\2\2\2")
        buf.write("-\u0091\3\2\2\2/\u0096\3\2\2\2\61\u009c\3\2\2\2\63\u00a4")
        buf.write("\3\2\2\2\65\u00ab\3\2\2\2\67\u00b0\3\2\2\29\u00b4\3\2")
        buf.write("\2\2;\u00b9\3\2\2\2=\u00bd\3\2\2\2?\u00c2\3\2\2\2A\u00c8")
        buf.write("\3\2\2\2C\u00cf\3\2\2\2E\u00d5\3\2\2\2G\u00e7\3\2\2\2")
        buf.write("I\u00e9\3\2\2\2K\u00fb\3\2\2\2M\u010a\3\2\2\2O\u010d\3")
        buf.write("\2\2\2Q\u011f\3\2\2\2S\u013c\3\2\2\2U\u013e\3\2\2\2W\u0145")
        buf.write("\3\2\2\2Y\u014c\3\2\2\2[\u0157\3\2\2\2]^\7*\2\2^\4\3\2")
        buf.write("\2\2_`\7+\2\2`\6\3\2\2\2ab\7=\2\2b\b\3\2\2\2cd\7.\2\2")
        buf.write("d\n\3\2\2\2ef\7}\2\2f\f\3\2\2\2gh\7\177\2\2h\16\3\2\2")
        buf.write("\2ij\7?\2\2j\20\3\2\2\2kl\7\60\2\2l\22\3\2\2\2mn\7~\2")
        buf.write("\2no\7~\2\2o\24\3\2\2\2pq\7X\2\2q\26\3\2\2\2rs\7(\2\2")
        buf.write("st\7(\2\2t\30\3\2\2\2uv\7~\2\2v\32\3\2\2\2wx\7#\2\2x\34")
        buf.write("\3\2\2\2yz\7-\2\2z\36\3\2\2\2{|\7/\2\2| \3\2\2\2}~\7,")
        buf.write("\2\2~\"\3\2\2\2\177\u0080\7\61\2\2\u0080$\3\2\2\2\u0081")
        buf.write("\u0082\7\'\2\2\u0082&\3\2\2\2\u0083\u0084\7k\2\2\u0084")
        buf.write("\u0085\7h\2\2\u0085(\3\2\2\2\u0086\u0087\7g\2\2\u0087")
        buf.write("\u0088\7n\2\2\u0088\u0089\7u\2\2\u0089\u008a\7g\2\2\u008a")
        buf.write("*\3\2\2\2\u008b\u008c\7y\2\2\u008c\u008d\7j\2\2\u008d")
        buf.write("\u008e\7k\2\2\u008e\u008f\7n\2\2\u008f\u0090\7g\2\2\u0090")
        buf.write(",\3\2\2\2\u0091\u0092\7t\2\2\u0092\u0093\7g\2\2\u0093")
        buf.write("\u0094\7c\2\2\u0094\u0095\7f\2\2\u0095.\3\2\2\2\u0096")
        buf.write("\u0097\7y\2\2\u0097\u0098\7t\2\2\u0098\u0099\7k\2\2\u0099")
        buf.write("\u009a\7v\2\2\u009a\u009b\7g\2\2\u009b\60\3\2\2\2\u009c")
        buf.write("\u009d\7y\2\2\u009d\u009e\7t\2\2\u009e\u009f\7k\2\2\u009f")
        buf.write("\u00a0\7v\2\2\u00a0\u00a1\7g\2\2\u00a1\u00a2\7n\2\2\u00a2")
        buf.write("\u00a3\7p\2\2\u00a3\62\3\2\2\2\u00a4\u00a5\7t\2\2\u00a5")
        buf.write("\u00a6\7g\2\2\u00a6\u00a7\7v\2\2\u00a7\u00a8\7w\2\2\u00a8")
        buf.write("\u00a9\7t\2\2\u00a9\u00aa\7p\2\2\u00aa\64\3\2\2\2\u00ab")
        buf.write("\u00ac\7x\2\2\u00ac\u00ad\7q\2\2\u00ad\u00ae\7k\2\2\u00ae")
        buf.write("\u00af\7f\2\2\u00af\66\3\2\2\2\u00b0\u00b1\7k\2\2\u00b1")
        buf.write("\u00b2\7p\2\2\u00b2\u00b3\7v\2\2\u00b38\3\2\2\2\u00b4")
        buf.write("\u00b5\7d\2\2\u00b5\u00b6\7q\2\2\u00b6\u00b7\7q\2\2\u00b7")
        buf.write("\u00b8\7n\2\2\u00b8:\3\2\2\2\u00b9\u00ba\7u\2\2\u00ba")
        buf.write("\u00bb\7v\2\2\u00bb\u00bc\7t\2\2\u00bc<\3\2\2\2\u00bd")
        buf.write("\u00be\7n\2\2\u00be\u00bf\7q\2\2\u00bf\u00c0\7p\2\2\u00c0")
        buf.write("\u00c1\7i\2\2\u00c1>\3\2\2\2\u00c2\u00c3\7h\2\2\u00c3")
        buf.write("\u00c4\7n\2\2\u00c4\u00c5\7q\2\2\u00c5\u00c6\7c\2\2\u00c6")
        buf.write("\u00c7\7v\2\2\u00c7@\3\2\2\2\u00c8\u00c9\7f\2\2\u00c9")
        buf.write("\u00ca\7q\2\2\u00ca\u00cb\7w\2\2\u00cb\u00cc\7d\2\2\u00cc")
        buf.write("\u00cd\7n\2\2\u00cd\u00ce\7g\2\2\u00ceB\3\2\2\2\u00cf")
        buf.write("\u00d0\7w\2\2\u00d0\u00d1\7p\2\2\u00d1\u00d2\7k\2\2\u00d2")
        buf.write("\u00d3\7q\2\2\u00d3\u00d4\7p\2\2\u00d4D\3\2\2\2\u00d5")
        buf.write("\u00d6\7v\2\2\u00d6\u00d7\7j\2\2\u00d7\u00d8\7t\2\2\u00d8")
        buf.write("\u00d9\7g\2\2\u00d9\u00da\7c\2\2\u00da\u00db\7f\2\2\u00db")
        buf.write("F\3\2\2\2\u00dc\u00e8\7\62\2\2\u00dd\u00df\t\2\2\2\u00de")
        buf.write("\u00dd\3\2\2\2\u00de\u00df\3\2\2\2\u00df\u00e0\3\2\2\2")
        buf.write("\u00e0\u00e4\t\3\2\2\u00e1\u00e3\t\4\2\2\u00e2\u00e1\3")
        buf.write("\2\2\2\u00e3\u00e6\3\2\2\2\u00e4\u00e2\3\2\2\2\u00e4\u00e5")
        buf.write("\3\2\2\2\u00e5\u00e8\3\2\2\2\u00e6\u00e4\3\2\2\2\u00e7")
        buf.write("\u00dc\3\2\2\2\u00e7\u00de\3\2\2\2\u00e8H\3\2\2\2\u00e9")
        buf.write("\u00ed\7$\2\2\u00ea\u00ec\n\5\2\2\u00eb\u00ea\3\2\2\2")
        buf.write("\u00ec\u00ef\3\2\2\2\u00ed\u00eb\3\2\2\2\u00ed\u00ee\3")
        buf.write("\2\2\2\u00ee\u00f0\3\2\2\2\u00ef\u00ed\3\2\2\2\u00f0\u00f1")
        buf.write("\7$\2\2\u00f1J\3\2\2\2\u00f2\u00f3\7v\2\2\u00f3\u00f4")
        buf.write("\7t\2\2\u00f4\u00f5\7w\2\2\u00f5\u00fc\7g\2\2\u00f6\u00f7")
        buf.write("\7h\2\2\u00f7\u00f8\7c\2\2\u00f8\u00f9\7n\2\2\u00f9\u00fa")
        buf.write("\7u\2\2\u00fa\u00fc\7g\2\2\u00fb\u00f2\3\2\2\2\u00fb\u00f6")
        buf.write("\3\2\2\2\u00fcL\3\2\2\2\u00fd\u00fe\7n\2\2\u00fe\u010b")
        buf.write("\7\62\2\2\u00ff\u0101\7n\2\2\u0100\u0102\t\2\2\2\u0101")
        buf.write("\u0100\3\2\2\2\u0101\u0102\3\2\2\2\u0102\u0103\3\2\2\2")
        buf.write("\u0103\u0107\t\3\2\2\u0104\u0106\t\4\2\2\u0105\u0104\3")
        buf.write("\2\2\2\u0106\u0109\3\2\2\2\u0107\u0105\3\2\2\2\u0107\u0108")
        buf.write("\3\2\2\2\u0108\u010b\3\2\2\2\u0109\u0107\3\2\2\2\u010a")
        buf.write("\u00fd\3\2\2\2\u010a\u00ff\3\2\2\2\u010bN\3\2\2\2\u010c")
        buf.write("\u010e\t\2\2\2\u010d\u010c\3\2\2\2\u010d\u010e\3\2\2\2")
        buf.write("\u010e\u0117\3\2\2\2\u010f\u0118\7\62\2\2\u0110\u0114")
        buf.write("\t\3\2\2\u0111\u0113\t\4\2\2\u0112\u0111\3\2\2\2\u0113")
        buf.write("\u0116\3\2\2\2\u0114\u0112\3\2\2\2\u0114\u0115\3\2\2\2")
        buf.write("\u0115\u0118\3\2\2\2\u0116\u0114\3\2\2\2\u0117\u010f\3")
        buf.write("\2\2\2\u0117\u0110\3\2\2\2\u0118\u0119\3\2\2\2\u0119\u011b")
        buf.write("\7\60\2\2\u011a\u011c\t\4\2\2\u011b\u011a\3\2\2\2\u011c")
        buf.write("\u011d\3\2\2\2\u011d\u011b\3\2\2\2\u011d\u011e\3\2\2\2")
        buf.write("\u011eP\3\2\2\2\u011f\u0121\7f\2\2\u0120\u0122\t\2\2\2")
        buf.write("\u0121\u0120\3\2\2\2\u0121\u0122\3\2\2\2\u0122\u012b\3")
        buf.write("\2\2\2\u0123\u012c\7\62\2\2\u0124\u0128\t\3\2\2\u0125")
        buf.write("\u0127\t\4\2\2\u0126\u0125\3\2\2\2\u0127\u012a\3\2\2\2")
        buf.write("\u0128\u0126\3\2\2\2\u0128\u0129\3\2\2\2\u0129\u012c\3")
        buf.write("\2\2\2\u012a\u0128\3\2\2\2\u012b\u0123\3\2\2\2\u012b\u0124")
        buf.write("\3\2\2\2\u012c\u012d\3\2\2\2\u012d\u012f\7\60\2\2\u012e")
        buf.write("\u0130\t\4\2\2\u012f\u012e\3\2\2\2\u0130\u0131\3\2\2\2")
        buf.write("\u0131\u012f\3\2\2\2\u0131\u0132\3\2\2\2\u0132R\3\2\2")
        buf.write("\2\u0133\u0134\7?\2\2\u0134\u013d\7?\2\2\u0135\u0136\7")
        buf.write("#\2\2\u0136\u013d\7?\2\2\u0137\u013d\t\6\2\2\u0138\u0139")
        buf.write("\7@\2\2\u0139\u013d\7?\2\2\u013a\u013b\7>\2\2\u013b\u013d")
        buf.write("\7?\2\2\u013c\u0133\3\2\2\2\u013c\u0135\3\2\2\2\u013c")
        buf.write("\u0137\3\2\2\2\u013c\u0138\3\2\2\2\u013c\u013a\3\2\2\2")
        buf.write("\u013dT\3\2\2\2\u013e\u0142\t\7\2\2\u013f\u0141\t\b\2")
        buf.write("\2\u0140\u013f\3\2\2\2\u0141\u0144\3\2\2\2\u0142\u0140")
        buf.write("\3\2\2\2\u0142\u0143\3\2\2\2\u0143V\3\2\2\2\u0144\u0142")
        buf.write("\3\2\2\2\u0145\u0149\t\t\2\2\u0146\u0148\t\b\2\2\u0147")
        buf.write("\u0146\3\2\2\2\u0148\u014b\3\2\2\2\u0149\u0147\3\2\2\2")
        buf.write("\u0149\u014a\3\2\2\2\u014aX\3\2\2\2\u014b\u0149\3\2\2")
        buf.write("\2\u014c\u0150\7%\2\2\u014d\u014f\n\n\2\2\u014e\u014d")
        buf.write("\3\2\2\2\u014f\u0152\3\2\2\2\u0150\u014e\3\2\2\2\u0150")
        buf.write("\u0151\3\2\2\2\u0151\u0154\3\2\2\2\u0152\u0150\3\2\2\2")
        buf.write("\u0153\u0155\t\13\2\2\u0154\u0153\3\2\2\2\u0155Z\3\2\2")
        buf.write("\2\u0156\u0158\t\f\2\2\u0157\u0156\3\2\2\2\u0158\u0159")
        buf.write("\3\2\2\2\u0159\u0157\3\2\2\2\u0159\u015a\3\2\2\2\u015a")
        buf.write("\u015b\3\2\2\2\u015b\u015c\b.\2\2\u015c\\\3\2\2\2\31\2")
        buf.write("\u00de\u00e4\u00e7\u00ed\u00fb\u0101\u0107\u010a\u010d")
        buf.write("\u0114\u0117\u011d\u0121\u0128\u012b\u0131\u013c\u0142")
        buf.write("\u0149\u0150\u0154\u0159\3\b\2\2")
        return buf.getvalue()


class LanguageLexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]


    T__0 = 1
    T__1 = 2
    T__2 = 3
    T__3 = 4
    T__4 = 5
    T__5 = 6
    T__6 = 7
    T__7 = 8
    T__8 = 9
    T__9 = 10
    T__10 = 11
    T__11 = 12
    T__12 = 13
    T__13 = 14
    T__14 = 15
    T__15 = 16
    T__16 = 17
    T__17 = 18
    T__18 = 19
    T__19 = 20
    T__20 = 21
    T__21 = 22
    T__22 = 23
    T__23 = 24
    T__24 = 25
    VoidType = 26
    IntType = 27
    BoolType = 28
    StringType = 29
    LongType = 30
    FloatType = 31
    DoubleType = 32
    UnionType = 33
    Thread = 34
    Integer = 35
    String = 36
    Bool = 37
    Long = 38
    Float = 39
    Double = 40
    CompOp = 41
    LowerName = 42
    UpperName = 43
    CommentText = 44
    WS = 45

    modeNames = [ "DEFAULT_MODE" ]

    literalNames = [ "<INVALID>",
            "'('", "')'", "';'", "','", "'{'", "'}'", "'='", "'.'", "'||'", 
            "'V'", "'&&'", "'|'", "'!'", "'+'", "'-'", "'*'", "'/'", "'%'", 
            "'if'", "'else'", "'while'", "'read'", "'write'", "'writeln'", 
            "'return'", "'void'", "'int'", "'bool'", "'str'", "'long'", 
            "'float'", "'double'", "'union'", "'thread'" ]

    symbolicNames = [ "<INVALID>",
            "VoidType", "IntType", "BoolType", "StringType", "LongType", 
            "FloatType", "DoubleType", "UnionType", "Thread", "Integer", 
            "String", "Bool", "Long", "Float", "Double", "CompOp", "LowerName", 
            "UpperName", "CommentText", "WS" ]

    ruleNames = [ "T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", 
                  "T__7", "T__8", "T__9", "T__10", "T__11", "T__12", "T__13", 
                  "T__14", "T__15", "T__16", "T__17", "T__18", "T__19", 
                  "T__20", "T__21", "T__22", "T__23", "T__24", "VoidType", 
                  "IntType", "BoolType", "StringType", "LongType", "FloatType", 
                  "DoubleType", "UnionType", "Thread", "Integer", "String", 
                  "Bool", "Long", "Float", "Double", "CompOp", "LowerName", 
                  "UpperName", "CommentText", "WS" ]

    grammarFileName = "Language.g4"

    def __init__(self, input=None):
        super().__init__(input)
        self.checkVersion("4.5.1")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None


